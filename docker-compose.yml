version: '3'
services:
  # ############################################################################################################
  # Traefik configuration
  # ############################################################################################################
  traefik:
    image: traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "8001:8001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/etc/traefik/traefik.toml

  # ############################################################################################################
  # nginx configuration
  # ############################################################################################################
  dev:
    build: ./nginx
    environment:
      APP_HOST_NAME: 'development'
      APP_HOST_PORT: 8001
    container_name: dev_nginx
    restart: always
    depends_on:
      - development
    labels:
      - "traefik.backend=dev"
      - "traefik.frontend.rule=Host:dev.docker.localhost"
      - "traefik.port=9000"
      - "traefik.enable=true"

  # ############################################################################################################
  # Flask code configuration
  # ############################################################################################################
  development:
    build:
      context: ./development
      dockerfile: local.Dockerfile
    environment:
      APP_NAME: 'DevelopmentManagementAPI'
      FLASK_CONFIG: 'development'
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: realxdata
      DB_USER: root
      DB_PASSWORD: root
      DOMAIN: 'dev.docker.localhost'
      DEBUG_MODE: 'True'
      CELERY_BROKER_URL: 'amqp://rabbitmq:rabbitmq@rabbit1:5672/'
      CELERY_RESULT_BACKEND: 'rpc://'
      RABBITMQ_HOST: 'rabbit1'
      RABBITMQ_USERNAME: 'rabbitmq'
      RABBITMQ_PASSWORD: 'rabbitmq'
      RABBITMQ_ROUTINGKEY: 'realxdata-routing-key'
      RABBITMQ_EXCHANGE: 'realxdata-exchange'
      RABBITMQ_QUEUE: 'realxdata-queue'
    volumes:
      - ./development:/app
    expose:
      - 8001
    depends_on:
      - mysql
#    labels:
#      - "traefik.backend=development"
#      - "traefik.frontend.rule=Host:development.docker.localhost"
#      - "traefik.port=8001"
#      - "traefik.enable=true"

  # ############################################################################################################
  # Mysql Database configuration
  # ############################################################################################################
  mysql:
    image: mysql:5.7
    volumes:
      - mysql_database:/var/lib/mysql
      - ./mysql_dumps:/dumps
    environment:
      MYSQL_ROOT_PASSWORD: root


  # ############################################################################################################
  # phpMyAdmin configuration
  # ############################################################################################################
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
    labels:
      - "traefik.backend=phpmyadmin"
      - "traefik.frontend.rule=Host:phpmyadmin.docker.localhost"
      - "traefik.port=80"
      - "traefik.enable=true"
    depends_on:
      - mysql

  # ############################################################################################################
  # CRON dumps mysql
  # ############################################################################################################
  mysql_dump:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      CRON_TIME: "* * * * *" # every minute
    volumes:
      - ./mysql_dumps:/backup
    depends_on:
      - mysql

  # ############################################################################################################
  # Rabbit MQ server
  # ############################################################################################################
  rabbit1:
    image: "rabbitmq:3-management"
    hostname: "rabbit1"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      - "traefik.backend=rabbit"
      - "traefik.frontend.rule=Host:rabbit.docker.localhost"
      - "traefik.port=15672"
      - "traefik.enable=true"
    volumes:
      - "./rabbit/enabled_plugins:/etc/rabbitmq/enabled_plugins"
      #- "./rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro"
      #- "./autocluster-0.4.1.ez:/usr/lib/rabbitmq/lib/rabbitmq_server-3.5.5/plugins/autocluster-0.4.1.ez"

  # ############################################################################################################
  # Celery Worker to handle Queue process
  # ############################################################################################################
  worker:
    build:
      context: ./development
      dockerfile: local.Dockerfile
    command: celery -A api.utility.celery.celery worker --loglevel=info
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: realxdata
      DB_USER: root
      DB_PASSWORD: root
    volumes:
      - ./development:/app
    links:
      - rabbit1
    depends_on:
      - rabbit1
      - mysql

volumes:
  mysql_database:
